def find_busiest_period(data):
    pcount = data[0][1] * (-1 if data[0][2] == 0 else 1)
    mpcount = float("-inf")
    for i in range(1, len(data)):
        if data[i][0] != data[i - 1][0]:
            if pcount > mpcount:
                mpcount = pcount
                mptime = data[i - 1][0]
        pcount += data[i][1] * (-1 if data[i][2] == 0 else 1)
    if pcount > mpcount:
        return data[len(data) - 1][0]
    return mptime
   
data = [[1487799425,14,1],[1487799425,4,0],[1487799425,2,0],[1487800378,10,1],[1487801478,18,0],[1487801478,19,1],[1487801478,1,0],[1487801478,1,1],[1487901013,1,0],[1487901211,7,1],[1487901211,8,0]]
print(find_busiest_period(data))
print(find_busiest_period([
                 [1487799425, 14, 1], 
                 [1487799425, 4,  0],
                 [1487799425, 2,  0],
                 [1487800378, 10, 1],
                 [1487801478, 18, 0],
                 [1487801478, 18, 1],
                 [1487901013, 1,  0],
                 [1487901211, 7,  1],
                 [1487901211, 7,  0] ]))
                 
assert find_busiest_period([
                 [1487799425, 14, 1], 
                 [1487799425, 4,  0],
                 [1487799425, 2,  0],
                 [1487800378, 10, 1],
                 [1487801478, 18, 0],
                 [1487801478, 18, 1],
                 [1487901013, 1,  0],
                 [1487901211, 7,  1],
                 [1487901211, 7,  0] ]) == 1487800378                 